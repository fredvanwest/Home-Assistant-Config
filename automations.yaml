- id: '1658439277930'
  alias: Bathroom On
  description: ''
  trigger: []
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.master_bathroom_bright
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.bathroom_timer
  mode: single
- id: '1658439299787'
  alias: Bathroom Off
  description: ''
  trigger: []
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.bathroom_off
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.bathroom_timer
  mode: single
- id: '1658439335962'
  alias: Bathroom Minimum
  description: ''
  trigger: []
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.bathroom_minimum
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.bathroom_timer
  mode: single
- id: '1658439354091'
  alias: Bathroom Nightlight
  description: ''
  trigger: []
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.master_bathroom_nightlight
  - service: timer.cancel
    data: {}
    target:
      entity_id: timer.bathroom_timer
  mode: single
- id: '1658450499589'
  alias: Carriage lights off
  description: ''
  trigger:
  - platform: sun
    event: sunrise
    offset: '10'
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.carriage_off
  mode: single
- id: '1658450703865'
  alias: Carriage Lights on
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '-10'
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.carriage_night
  mode: single
- id: '1658501589719'
  alias: Nightly Mail Cleanup
  description: ''
  trigger:
  - platform: time
    at: '23:55:00'
  condition: []
  action:
  - service: rest_command.delete_mail
    data: {}
  mode: single
- id: '1658502219720'
  alias: Daily Mail Check
  description: ''
  trigger:
  - platform: time
    at: '10:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.mail_usps_mail
        above: '0'
      sequence:
      - service: rest_command.forward_mail
        data: {}
    default: []
  mode: single
- id: '1658748482296'
  alias: Door Alert
  description: ''
  trigger:
  - type: opened
    platform: device
    device_id: 4ca8fa1828cf372d526af3ab234dd315
    entity_id: binary_sensor.front_door_contact
    domain: binary_sensor
    id: front_door_opened
  - type: opened
    platform: device
    device_id: 8d9843bdfe600a4ddc0d0ff86bc3c805
    entity_id: binary_sensor.sliding_door_contact
    domain: binary_sensor
    id: sliding_door_opened
  - type: opened
    platform: device
    device_id: dee2ed43aaa0932234a40ee1400df59f
    entity_id: binary_sensor.garage_door_contact
    domain: binary_sensor
    id: garage_door_opened
  condition: []
  action:
  - service: media_player.play_media
    data:
      media_content_type: sound
      media_content_id: bell_02
    target:
      entity_id: media_player.vw_familyroom
  - choose:
    - conditions:
      - condition: trigger
        id: sliding_door_opened
      sequence:
      - service: notify.alexa_media_vw_familyroom
        data:
          message: "{{ [\"Precious pupper!\",\n  \"Wonderful woofer!\",\n  \"Good
            dog!\"] | random }}\n"
          data:
            type: tts
    - conditions:
      - condition: trigger
        id: garage_door_opened
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.fred_arriving
          state: 'on'
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: notify.alexa_media_vw_familyroom
        data:
          message: Dads home. King of the castle. Lord of the manor.
          data:
            type: tts
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.fred_arriving
    - conditions:
      - condition: trigger
        id: front_door_opened
      - condition: and
        conditions:
        - condition: state
          entity_id: input_boolean.replay_daily_briefing
          state: 'on'
      sequence:
      - delay:
          hours: 0
          minutes: 1
          seconds: 0
          milliseconds: 0
      - service: notify.alexa_media_vw_familyroom
        data:
          data:
            type: tts
          message: Replaying daily briefing
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.replay_daily_briefing
    default: []
  mode: single
- id: '1658858691976'
  alias: Bathroom Motion
  description: ''
  trigger:
  - type: motion
    platform: device
    device_id: eb8dab9b1a8b45c5b257e12366535fec
    entity_id: binary_sensor.hue_motion_sensor_motion
    domain: binary_sensor
  condition:
  - condition: device
    type: is_off
    device_id: 0aebb0eae3e0d6fbb1cdb4a30d02918d
    entity_id: light.smart_home_o_2
    domain: light
  action:
  - choose:
    - conditions:
      - condition: sun
        after: sunset
        after_offset: '-10'
      - condition: or
        conditions:
        - condition: time
          before: '23:59:59'
          after: '17:00:00'
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.master_bathroom_nightlight
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bathroom_timer
    - conditions:
      - condition: sun
        before: sunrise
        before_offset: '10'
      - condition: or
        conditions:
        - condition: time
          before: 08:00:00
          weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
          - sat
          - sun
          after: 00:00:00
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id: scene.bathroom_minimum
      - service: timer.start
        data: {}
        target:
          entity_id: timer.bathroom_timer
    default:
    - service: scene.turn_on
      data: {}
      target:
        entity_id:
        - scene.bathroom_off
    - service: timer.start
      data: {}
      target:
        entity_id: timer.bathroom_timer
  mode: single
- id: '1658858969993'
  alias: Bathroom Timer Elapsed
  description: ''
  trigger:
  - platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bathroom_timer
  condition: []
  action:
  - service: scene.turn_on
    data: {}
    target:
      entity_id: scene.bathroom_off
  mode: single
- id: '1659226911033'
  alias: Set Trash Day
  description: ''
  trigger:
  - platform: time
    at: 00:00:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        before: 00:00:00
        weekday:
        - tue
        after: 00:00:00
      sequence:
      - service: input_select.set_options
        data:
          options: Trash+Recycle
        target:
          entity_id: input_select.trash_day
    - conditions:
      - condition: time
        before: 00:00:00
        weekday:
        - fri
        after: 00:00:00
      sequence:
      - service: input_select.set_options
        data:
          options: Trash Day
        target:
          entity_id: input_select.trash_day
    default:
    - service: input_select.set_options
      data:
        options: No Trash
      target:
        entity_id: input_select.trash_day
  mode: single
- id: '1659227281555'
  alias: Daily Reset
  description: ''
  trigger:
  - platform: time
    at: 00:01:00
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        before: 00:00:00
        weekday:
        - sun
        after: 00:00:00
      sequence:
      - service: input_select.set_options
        data:
          options: Sunday
        target:
          entity_id: input_select.mail_status
    - conditions:
      - condition: state
        entity_id: calendar.holidays_in_united_states
        state: 'on'
      sequence:
      - service: input_select.set_options
        data:
          options: Holiday
        target:
          entity_id: input_select.mail_status
    default:
    - service: input_select.set_options
      data:
        options: No Mail
      target:
        entity_id: input_select.mail_status
  - service: input_boolean.turn_off
    data: {}
    target:
      entity_id:
      - input_boolean.fred_arriving
      - input_boolean.replay_daily_briefing
  mode: single
- id: '1659230535897'
  alias: YGM
  description: ''
  trigger:
  - platform: numeric_state
    entity_id: sensor.mail_usps_mail
    above: '0'
  condition:
  - condition: state
    entity_id: input_select.mail_status
    state: No Mail
  action:
  - service: input_select.set_options
    data:
      options: Mail
    target:
      entity_id: input_select.mail_status
  - service: notify.mobile_app_heisenberg
    data:
      message: You've Got Mail
      title: YGM
      data:
        image: '{{ states(''sensor.mail_image_url'') }}'
  mode: single
- id: '1659300783630'
  alias: Set Fred Arriving
  description: ''
  trigger:
  - platform: zone
    entity_id: person.fvanwest
    zone: zone.home
    event: enter
  condition: []
  action:
  - service: input_boolean.turn_on
    data: {}
    target:
      entity_id: input_boolean.fred_arriving
  mode: single
- id: '1659301860640'
  alias: Announce Mail Status
  description: ''
  trigger:
  - platform: time
    at: '13:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.mail_status
        state: Sunday
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/no-post-on-sundays.mp3"/>
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
      - service: notify.alexa_media
        data:
          message: No post on sunday
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.mail_status
        state: Holiday
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/hp-christmas2.mp3"/>
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
      - service: notify.alexa_media
        data:
          message: Today is a holiday
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.mail_status
        state: Mail
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/ah-mails-here.mp3"/>
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
      - service: notify.alexa_media
        data:
          message: "{%- if((states(\"sensor.mail_usps_mail\") | int) == 1) -%}\n  One
            piece of mail\n{%- else -%}\n  {{ states(\"sensor.mail_usps_mail\") |
            int }} pieces of mail\n{%- endif %} will be delivered.\n"
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
    default:
    - service: notify.alexa_media
      data:
        message: <audio src="https://mc-usa.duckdns.org/local/alexa/no-such-thing-as-magic.mp3"/>
        target: '{{ states("input_text.announce_media") }}'
        data:
          type: tts
    - service: notify.alexa_media
      data:
        message: No mail today.
        target: '{{ states("input_text.announce_media") }}'
        data:
          type: tts
    - service: notify.mobile_app_heisenberg
      data:
        message: No mail arriving today
        title: USPS
        data:
          entity_id: camera.mail_usps_camera
  - service: script.say_house_cup
    data:
      device: media_player.vw_familyroom
  mode: single
- id: '1659305364683'
  alias: popup test
  description: ''
  trigger: []
  condition: []
  action:
  - service: notify.android_tv_fire_tv
    data:
      message: Hello Youtube
      title: Cool Title
      data:
        duration: 3
        fontsize: small
        position: lower right
        color: blue
        image:
          path: /config/www/images/leia.png
  mode: single
- id: '1660835408789'
  alias: Smart Door
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.front_door_contact
    - binary_sensor.sliding_door_contact
    - binary_sensor.garage_door_contact
    from: 'off'
    to: 'on'
    id: chime
    for:
      hours: 0
      minutes: 0
      seconds: 0
  - platform: state
    entity_id:
    - binary_sensor.front_door_contact
    - binary_sensor.sliding_door_contact
    - binary_sensor.garage_door_contact
    from: 'off'
    to: 'on'
    id: door_still_open
    for:
      hours: 0
      minutes: 1
      seconds: 0
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: chime
      sequence:
      - service: media_player.play_media
        data:
          media_content_type: sound
          media_content_id: bell_02
        target:
          entity_id: '{{ states("input_text.announce_media") }}'
      - choose:
        - conditions:
          - condition: state
            entity_id: binary_sensor.front_door_contact
            state: 'on'
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.replay_daily_briefing
              state: 'on'
          sequence:
          - service: notify.alexa_media
            data:
              message: Replaying daily briefing
              target: '{{ states("input_text.announce_media") }}'
              data:
                type: tts
          - delay:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.replay_daily_briefing
        - conditions:
          - condition: state
            entity_id: binary_sensor.sliding_door_contact
            state: 'on'
          sequence:
          - service: notify.alexa_media
            data:
              message: "{{ [\"Grrrr. Bark. Woof. Good dog!\",\n    \"Wonderful woofer!\",\n
                \   \"Somebody deserves a treat!\",\n    \"Sit ooboo Sit! Good Dog!\",\n
                \   \"Whos a good dog?\",\n    \"Precious pupper!\"] | random }}\n"
              target: '{{ states("input_text.announce_media") }}'
              data:
                type: tts
        - conditions:
          - condition: state
            entity_id: binary_sensor.garage_door_contact
            state: 'on'
          - condition: and
            conditions:
            - condition: state
              entity_id: input_boolean.fred_arriving
              state: 'on'
          sequence:
          - delay:
              hours: 0
              minutes: 1
              seconds: 0
              milliseconds: 0
          - service: notify.alexa_media
            data:
              message: Dads home. King of the castle. Lord of the manor
              target: '{{ states("input_text.announce_media") }}'
              data:
                type: tts
          - service: input_boolean.turn_off
            data: {}
            target:
              entity_id: input_boolean.fred_arriving
        default: []
    - conditions:
      - condition: trigger
        id: door_still_open
      sequence:
      - service: notify.alexa_media
        data:
          message: "The {{ trigger.to_state.attributes.friendly_name | replace(\"
            contact\",\"\") }} {{ [\n  ' is standing open.',\n  ' is open.',\n  '
            does not close on its own.',\n  ' was left standing open.'\n ] | random
            }}\n {{ [\n  'Can a human be so kind and close it?',\n  'Were you born
            in a barn?',\n  'Buzz buzz, great new hive. Lets keep it outside, shall
            we?',\n  'The air quality in this house has actually improved.',\n  'Closing
            the door would improve the internal climate of the house.',\n  'Hey. The
            door was just opened and this is crazy. But now you know. So close it
            maybe.',\n  'The frog found out the door is opened and wants back in.',\n
            \ 'If at first you do not succeed in closing the door, please try again.
            Like, Right now seems like a good time to try again.',\n  'And the automatic
            door closer appears to be broken. So, you know what to do. Time to get
            physical.',\n  'I would close it for you. But I lack legs. And Arms.',\n
            \ 'Remember when you said you hate bugs. Well now is your chance to help.'\n
            ] | random }}\n"
          target: '{{ states("input_text.announce_media") }}'
          data:
            type: tts
    default: []
  mode: single
- id: '1661256125909'
  alias: Carriage Lights on Improved
  description: ''
  trigger:
  - platform: sun
    event: sunset
    offset: '-10'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: time
        weekday:
        - fri
        - sat
        before: '23:59:59'
        after: 00:00:00
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id:
          - scene.carriage_weekend
    - conditions:
      - condition: template
        value_template: '{{ as_timestamp(state_attr("calendar.holidays_in_united_states",
          "start_time"))|float - as_timestamp(now())|float < 86400.0 }}'
      sequence:
      - service: scene.turn_on
        data: {}
        target:
          entity_id:
          - scene.carriage_holiday
    default:
    - service: scene.turn_on
      data: {}
      target:
        entity_id: scene.carriage_night
  mode: single
- id: '1661360108986'
  alias: Turn off Heating Pad
  description: ''
  trigger:
  - platform: time
    at: '23:00:00'
  condition: []
  action:
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: sensor.outside_lights_current_power
        above: '10.0'
      sequence:
      - service: notify.alexa_media_vw_familyroom
        data:
          message: Turning off heating pad
          data:
            type: tts
      - service: switch.turn_off
        data: {}
        target:
          entity_id:
          - switch.outside_lights
      - service: notify.all_ios_devices
        data:
          message: Circut above minimum power. Turn back on manually tomorrow.
          title: Heating Pad Switched Off
          data:
            type: tts
    default:
    - service: notify.alexa_media_vw_familyroom
      data:
        message: Heating pad is already off.
        data:
          type: tts
  mode: single
- id: '1661360467417'
  alias: Turn on heating pad
  description: ''
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: switch.outside_lights
        state: 'off'
      sequence:
      - service: notify.alexa_media_vw_familyroom
        data:
          message: Turning heating pad switch on.
          data:
            type: tts
      - service: switch.turn_on
        data: {}
        target:
          entity_id: switch.outside_lights
      - delay:
          hours: 0
          minutes: 0
          seconds: 30
          milliseconds: 0
      - choose:
        - conditions:
          - condition: numeric_state
            entity_id: sensor.outside_lights_current_power
            above: '0.1'
          sequence:
          - service: notify.alexa_media_vw_familyroom
            data:
              message: Heating pad is now on.
              data:
                type: tts
        default:
        - service: notify.alexa_media_vw_familyroom
          data:
            message: Try turning on the heating pad switch.
            data:
              type: tts
    default: []
  mode: single
- id: '1661433270269'
  alias: Perimeter - Doorbell Motion - TV notification
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.celtic_ash_motion_2
    to: 'on'
    from: 'off'
  condition:
  - condition: state
    entity_id: media_player.samsung_tv
    state: 'on'
  - condition: state
    entity_id: media_player.vw_dlna_3
    state: idle
  action:
  - service: camera.snapshot
    target:
      entity_id: camera.celtic_ash
    data:
      filename: /config/www/tmp/Visitor_alert.jpg
  - service: notify.android_tv_fire_tv
    data:
      message: Motion detected
      title: Ring Doorbell
      data:
        duration: 10
        position: bottom-right
        transparency: 50%
        color: grey
        interrupt: 1
        image:
          path: /config/www/tmp/Visitor_alert.jpg
  - service: delete.file
    data:
      file: /config/www/tmp/Visitor_alert.jpg
  mode: parallel
  max: 10
- id: '1662401699019'
  alias: Fred Working
  description: ''
  trigger:
  - platform: time
    at: 07:30:00
  condition:
  - condition: state
    entity_id: calendar.jpmc_holiday
    state: 'off'
  - condition: state
    entity_id: calendar.fred_vacation
    state: 'off'
  action:
  - service: light.turn_on
    data:
      color_name: darkgreen
    target:
      entity_id: light.globe_fairy_lights
  - service: notify.alexa_media
    data:
      message: <audio src="https://mc-usa.duckdns.org/local/alexa/slytherin.mp3"/>
      target: media_player.vw_guestroom
      data:
        type: tts
  mode: single
- id: '1662401848942'
  alias: Fred Done Working
  description: ''
  trigger:
  - platform: time
    at: '17:00:00'
  condition:
  - condition: state
    entity_id: calendar.jpmc_holiday
    state: 'off'
  - condition: state
    entity_id: calendar.fred_vacation
    state: 'off'
  action:
  - service: light.turn_off
    data: {}
    target:
      entity_id: light.globe_fairy_lights
  - service: notify.alexa_media
    data:
      message: <audio src="https://mc-usa.duckdns.org/local/alexa/quitting-time.mp3"/>
      target: media_player.vw_guestroom
      data:
        type: tts
  mode: single
- id: '1662467680375'
  alias: IKEA Remote Virtual Switch
  description: ''
  trigger:
  - platform: state
    entity_id:
    - switch.ikea_remote_virtual_switch_dim
    to: 'on'
    id: trigger_remote_dim
  - platform: state
    entity_id:
    - switch.ikea_remote_virtual_switch_on
    id: trigger_remote_on
    to: 'on'
  - platform: state
    entity_id:
    - switch.ikea_remote_virtual_switch_off
    to: 'on'
    id: trigger_remote_off
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: trigger_remote_on
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.master_closet_on
        metadata: {}
    - conditions:
      - condition: trigger
        id: trigger_remote_dim
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.master_closet_minimum
        metadata: {}
    - conditions:
      - condition: trigger
        id: trigger_remote_off
      sequence:
      - service: scene.turn_on
        target:
          entity_id: scene.master_closet_off
        metadata: {}
    default: []
  mode: single
- id: '1663002689702'
  alias: Fred Working Improved
  description: Uses schedule
  trigger:
  - platform: state
    entity_id:
    - schedule.work_schedule
    from: 'off'
    to: 'on'
    id: fred_work_start
  - platform: state
    entity_id:
    - schedule.work_schedule
    from: 'on'
    to: 'off'
    id: fred_work_stop
  condition:
  - condition: state
    entity_id: calendar.jpmc_holiday
    state: 'off'
  - condition: state
    entity_id: calendar.fred_vacation
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: fred_work_start
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/slytherin.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: darkgreen
        target:
          entity_id: light.globe_fairy_lights
    - conditions:
      - condition: trigger
        id: fred_work_stop
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/quitting-time.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.globe_fairy_lights
  mode: single
- id: '1663092434180'
  alias: Laptop Perimeter Detection
  description: ''
  trigger:
  - platform: state
    entity_id:
    - binary_sensor.celtic_ash_motion_2
    to: 'on'
    from: 'off'
  condition: []
  action:
  - service: camera.snapshot
    target:
      entity_id: camera.celtic_ash
    data:
      filename: /config/www/tmp/Visitor_alert.jpg
  - service: notify.hass_agent_l_pf2k9yz5
    data:
      message: Motion detected
      title: Ring Doorbell
      data:
        duration: 10
        image: /config/www/tmp/Visitor_alert.jpg
  - service: delete.file
    data:
      file: /config/www/tmp/Visitor_alert.jpg
  mode: parallel
  max: 10
- id: '1664366553928'
  alias: Fred working improved improved
  description: Uses schedule
  trigger:
  - platform: state
    entity_id:
    - schedule.work_schedule
    from: 'off'
    to: 'on'
    id: fred_work_start
  - platform: state
    entity_id:
    - schedule.work_schedule
    from: 'on'
    to: 'off'
    id: fred_work_stop
  condition:
  - condition: state
    entity_id: calendar.jpmc_holiday
    state: 'off'
  - condition: state
    entity_id: calendar.fred_vacation
    state: 'off'
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: fred_work_start
      sequence:
      - service: automation.trigger
        data: {}
        target:
          entity_id:
          - automation.sorting_hat_improved
    - conditions:
      - condition: trigger
        id: fred_work_stop
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/quitting-time.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_off
        data: {}
        target:
          entity_id: light.globe_fairy_lights
  mode: single
- id: '1664368943997'
  alias: Sorting Hat
  description: Today's sorting hat result
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: slytherin
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/slytherin.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: darkgreen
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Fred!
          target: media_player.vw_guestroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: hufflepuff
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/hufflepuff.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: yellow
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Ted and Laura!
          target: media_player.vw_guestroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: gryffindor
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/gryffindor.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: darkred
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Nico!
          target: media_player.vw_guestroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: ravenclaw
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/ravenclaw.mp3"/>
          target: media_player.vw_guestroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: aqua
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Rachel!
          target: media_player.vw_guestroom
          data:
            type: tts
  - service: notify.alexa_media_vw_guestroom
    data:
      message: Todays house cup was won by {{ states("input_select.hogwarts_house")
        }}. I believe congratulations are in order.
      data:
        type: tts
  mode: single
- id: '1664370726931'
  alias: House Cup
  description: ''
  trigger:
  - platform: time
    at: 00:01:00
  condition: []
  action:
  - service: input_number.set_value
    data:
      value: '{{ range(0,4) | random | int }}'
    target:
      entity_id: input_number.house_cup
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 1
      sequence:
      - service: input_select.select_option
        data:
          option: slytherin
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 2
      sequence:
      - service: input_select.select_option
        data:
          option: gryffindor
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        value_template: ''
        below: 3
      sequence:
      - service: input_select.select_option
        data:
          option: ravenclaw
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 4
      sequence:
      - service: input_select.select_option
        data:
          option: ravenclaw
        target:
          entity_id: input_select.hogwarts_house
  mode: single
- id: '1664539648769'
  alias: Sorting Hat Redux
  description: Today's sorting hat result
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: slytherin
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/slytherin.mp3"/>
          target: media_player.vw_familyroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: darkgreen
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Fred!
          target: media_player.vw_familyroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: hufflepuff
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/hufflepuff.mp3"/>
          target: media_player.vw_familyroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: yellow
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Ted and Laura!
          target: media_player.vw_familyroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: gryffindor
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/gryffindor.mp3"/>
          target: media_player.vw_familyroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: darkred
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Nico!
          target: media_player.vw_familyroom
          data:
            type: tts
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: ravenclaw
      sequence:
      - service: notify.alexa_media
        data:
          message: <audio src="https://mc-usa.duckdns.org/local/alexa/ravenclaw.mp3"/>
          target: media_player.vw_familyroom
          data:
            type: tts
      - service: light.turn_on
        data:
          color_name: aqua
        target:
          entity_id: light.globe_fairy_lights
      - service: notify.alexa_media
        data:
          message: Great news Rachel!
          target: media_player.vw_familyroom
          data:
            type: tts
  - service: script.say_house_cup
    data:
      device: media_player.vw_familyroom
  mode: single
- id: '1665264420447'
  alias: Set House Cup Decor
  description: Set today's house cup decor
  trigger: []
  condition: []
  action:
  - choose:
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: slytherin
      sequence:
      - service: light.turn_on
        data:
          color_name: darkgreen
        target:
          entity_id: light.globe_fairy_lights
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: hufflepuff
      sequence:
      - service: light.turn_on
        data:
          color_name: yellow
        target:
          entity_id: light.globe_fairy_lights
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: gryffindor
      sequence:
      - service: light.turn_on
        data:
          color_name: darkred
        target:
          entity_id: light.globe_fairy_lights
    - conditions:
      - condition: state
        entity_id: input_select.hogwarts_house
        state: ravenclaw
      sequence:
      - service: light.turn_on
        data:
          color_name: aqua
        target:
          entity_id: light.globe_fairy_lights
  mode: single
- id: '1665264657846'
  alias: Sorting Hat Improved
  description: Today's sorting hat result
  trigger: []
  condition: []
  action:
  - service: automation.trigger
    data: {}
    target:
      entity_id: automation.set_house_cup_decor
  - service: script.say_house_cup
    data:
      device: media_player.vw_guestroom
  mode: single
- id: '1666372229200'
  alias: Hourly Points
  description: ''
  trigger:
  - platform: time_pattern
    minutes: '30'
  condition: []
  action:
  - service: input_number.set_value
    data:
      value: '{{ range(0,4) | random | int }}'
    target:
      entity_id: input_number.hourly_house
  - service: input_number.set_value
    data:
      value: '{{ (range(0,10) | random | int ) + 1.0 }}'
    target:
      entity_id: input_number.hourly_points
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: input_number.hourly_house
        below: 1
      sequence:
      - repeat:
          count: '{{ states("input_number.hourly_points") | int }}

            '
          sequence:
          - service: counter.increment
            data: {}
            target:
              entity_id: counter.slytherin_points
      - service: input_text.set_value
        data:
          value: slytherin
        target:
          entity_id: input_text.hourly_house_winner
    - conditions:
      - condition: numeric_state
        entity_id: input_number.hourly_house
        below: 2
      sequence:
      - repeat:
          count: '{{ states("input_number.hourly_points") | int }}

            '
          sequence:
          - service: counter.increment
            data: {}
            target:
              entity_id: counter.gryffindor_points
      - service: input_text.set_value
        data:
          value: gryffindor
        target:
          entity_id: input_text.hourly_house_winner
    - conditions:
      - condition: numeric_state
        entity_id: input_number.hourly_house
        below: 3
      sequence:
      - repeat:
          count: '{{ states("input_number.hourly_points") | int }}

            '
          sequence:
          - service: counter.increment
            data: {}
            target:
              entity_id: counter.hufflepuff_points
      - service: input_text.set_value
        data:
          value: hufflepuff
        target:
          entity_id: input_text.hourly_house_winner
    - conditions:
      - condition: numeric_state
        entity_id: input_number.hourly_house
        below: 4
      sequence:
      - repeat:
          count: '{{ states("input_number.hourly_points") | int }}

            '
          sequence:
          - service: counter.increment
            data: {}
            target:
              entity_id: counter.ravenclaw_points
      - service: input_text.set_value
        data:
          value: ravenclaw
        target:
          entity_id: input_text.hourly_house_winner
  mode: single
- id: '1666379041827'
  alias: House Cup Improved
  description: ''
  trigger:
  - platform: time
    at: 00:01:00
  condition: []
  action:
  - service: input_number.set_value
    data:
      value: '{% set slytherin_pts = states("counter.slytherin_points") | int %} {%
        set gryffindor_pts = states("counter.gryffindor_points") | int %} {% set hufflepuff_pts
        = states("counter.hufflepuff_points") | int %} {% set ravenclaw_pts = states("counter.ravenclaw_points")
        | int %} {% set house_standings = [slytherin_pts,gryffindor_pts,hufflepuff_pts,ravenclaw_pts]
        %} {% set house_winner = max(house_standings) %} {% set x = house_standings.index(house_winner)
        %} {{ x }}

        '
    target:
      entity_id: input_number.house_cup
  - choose:
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 1
      sequence:
      - service: input_select.select_option
        data:
          option: slytherin
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 2
      sequence:
      - service: input_select.select_option
        data:
          option: gryffindor
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 3
      sequence:
      - service: input_select.select_option
        data:
          option: hufflepuff
        target:
          entity_id: input_select.hogwarts_house
    - conditions:
      - condition: numeric_state
        entity_id: input_number.house_cup
        below: 4
      sequence:
      - service: input_select.select_option
        data:
          option: ravenclaw
        target:
          entity_id: input_select.hogwarts_house
  - service: counter.reset
    data: {}
    target:
      entity_id:
      - counter.gryffindor_points
      - counter.hufflepuff_points
      - counter.ravenclaw_points
      - counter.slytherin_points
  mode: single
- id: '1667007819622'
  alias: Toggle watching trek
  description: ''
  trigger:
  - platform: state
    entity_id:
    - media_player.fire_tv_192_168_1_57
    to: com.cbs.ott
    attribute: app_id
    id: Turn_on_trek
  - platform: state
    entity_id:
    - media_player.fire_tv_192_168_1_57
    attribute: app_id
    id: Turn_off_trek
    from: com.cbs.ott
  condition: []
  action:
  - choose:
    - conditions:
      - condition: trigger
        id: Turn_on_trek
      sequence:
      - service: input_boolean.turn_on
        data: {}
        target:
          entity_id: input_boolean.watching_trek
      - service: rest_command.trek_mode_on
        data: {}
    - conditions:
      - condition: trigger
        id: Turn_off_trek
      sequence:
      - service: input_boolean.turn_off
        data: {}
        target:
          entity_id: input_boolean.watching_trek
      - service: rest_command.trek_mode_off
        data: {}
  mode: single
